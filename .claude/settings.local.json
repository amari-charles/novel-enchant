{
  "permissions": {
    "allow": [
      "Bash(curl -X POST \"https://cquunkrscfpocntjekfq.supabase.co/rest/v1/rpc/exec_sql?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNxdXVua3JzY2Zwb2NudGpla2ZxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMTI0NjQsImV4cCI6MjA3NDY4ODQ2NH0.MNg49XYmRPOap2fXccfOd5KEFb_0WXLiVWRzRNmsXWs\" -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNxdXVua3JzY2Zwb2NudGpla2ZxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMTI0NjQsImV4cCI6MjA3NDY4ODQ2NH0.MNg49XYmRPOap2fXccfOd5KEFb_0WXLiVWRzRNmsXWs\" -H \"Content-Type: application/json\" -d \"{\"\"query\"\": \"\"DROP POLICY IF EXISTS \\\"\"Dev user can insert enhance jobs\\\"\" ON enhance_jobs; DROP POLICY IF EXISTS \\\"\"Dev user can view enhance jobs\\\"\" ON enhance_jobs; DROP POLICY IF EXISTS \\\"\"Dev user can update enhance jobs\\\"\" ON enhance_jobs; CREATE POLICY \\\"\"Dev user can insert enhance jobs\\\"\" ON enhance_jobs FOR INSERT WITH CHECK (user_id = ''00000000-0000-0000-0000-000000000123''); CREATE POLICY \\\"\"Dev user can view enhance jobs\\\"\" ON enhance_jobs FOR SELECT USING (user_id = ''00000000-0000-0000-0000-000000000123''); CREATE POLICY \\\"\"Dev user can update enhance jobs\\\"\" ON enhance_jobs FOR UPDATE USING (user_id = ''00000000-0000-0000-0000-000000000123'');\"\"}\")",
      "WebSearch",
      "Bash(npx supabase functions deploy:*)",
      "Bash(npm run dev:*)",
      "Bash(curl -X POST \"https://cquunkrscfpocntjekfq.supabase.co/functions/v1/extract-scenes\" -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNxdXVua3JzY2Zwb2NudGpla2ZxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMTI0NjQsImV4cCI6MjA3NDY4ODQ2NH0.MNg49XYmRPOap2fXccfOd5KEFb_0WXLiVWRzRNmsXWs\" -H \"Content-Type: application/json\" -d \"{\"\"text\"\": \"\"This is a test story. It has multiple scenes. Scene break here.\"\", \"\"jobId\"\": \"\"test-job-123\"\"}\")",
      "Bash(npm run lint)",
      "Bash(npm run build:*)",
      "Bash(npx shadcn@latest add:*)",
      "Bash(printf \"y\\n\")",
      "Bash(printf \"y\\n\\n\")",
      "Bash(npx shadcn@latest init:*)",
      "Bash(npx tailwindcss:*)",
      "WebFetch(domain:ui.shadcn.com)",
      "Bash(npm install:*)",
      "Bash(npx eslint:*)",
      "WebFetch(domain:supabase.com)",
      "Bash(curl -X POST \"https://cquunkrscfpocntjekfq.supabase.co/rest/v1/rpc/exec_sql?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNxdXVua3JzY2Zwb2NudGpla2ZxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMTI0NjQsImV4cCI6MjA3NDY4ODQ2NH0.MNg49XYmRPOap2fXccfOd5KEFb_0WXLiVWRzRNmsXWs\" -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNxdXVua3JzY2Zwb2NudGpla2ZxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMTI0NjQsImV4cCI6MjA3NDY4ODQ2NH0.MNg49XYmRPOap2fXccfOd5KEFb_0WXLiVWRzRNmsXWs\" -H \"Content-Type: application/json\" -d \"{\"\"query\"\": \"\"SELECT id, title, content FROM enhanced_copies WHERE user_id = ''00000000-0000-0000-0000-000000000123'' LIMIT 1;\"\"}\")",
      "Bash(npx supabase secrets:*)",
      "Bash(echo $OPENAI_API_KEY)",
      "Bash(cat:*)",
      "Bash(node:*)",
      "Bash(npx supabase:*)",
      "Bash(curl -X POST http://127.0.0.1:54321/functions/v1/enhance-start -H \"Content-Type: application/json\" -d '{\"\"chapterId\"\": \"\"test-chapter-123\"\", \"\"stylePreset\"\": \"\"cinematic\"\", \"\"capScenes\"\": 3}')",
      "Bash(curl -X POST http://127.0.0.1:54321/functions/v1/enhance-start -H \"Content-Type: application/json\" -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImN0cHNla2J5cWJ3cXd3Z3E2bGhpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczMTQ5OTA4MSwiZXhwIjoyMDQ3MDc1MDgxfQ.Zb8-_J2QGdNvdWGa8Tgns1g-kKs2w3qrNZfv4Lq8HZU\" -d '{\"\"chapterId\"\": \"\"test-chapter-123\"\", \"\"stylePreset\"\": \"\"cinematic\"\", \"\"capScenes\"\": 3}')",
      "Bash(curl -X POST http://127.0.0.1:54321/functions/v1/enhance-start -H \"Content-Type: application/json\" -H \"Authorization: Bearer sb_secret_N7UND0UgjKTVK-Uodkm0Hg_xSvEMPvz\" -d '{\"\"chapterId\"\": \"\"test-chapter-123\"\", \"\"stylePreset\"\": \"\"cinematic\"\", \"\"capScenes\"\": 3}')",
      "Bash(curl:*)",
      "Bash(find:*)",
      "WebFetch(domain:www.geeksforgeeks.org)",
      "Bash(git restore:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(printf \"Y\\n\")",
      "Bash(git push:*)",
      "Bash(npm run test:*)",
      "Bash(git rm:*)",
      "Bash(git mv:*)",
      "Bash(npm run test:integration:*)",
      "Read(//c/Users/Amari/Code/**)",
      "Bash(cmd.exe /c \"npx supabase migration repair --status reverted 20251002055502\")",
      "Bash(MSYS_NO_PATHCONV=1 npx supabase migration repair --status reverted 20251002055502)",
      "Bash(MSYS_NO_PATHCONV=1 npx supabase migration repair --status reverted 20251002060000)",
      "Bash(MSYS_NO_PATHCONV=1 npx supabase migration repair --status reverted 20251003064725)",
      "Bash(MSYS_NO_PATHCONV=1 npx supabase migration repair --status reverted 20251003080000)",
      "Bash(MSYS_NO_PATHCONV=1 npx supabase migration list)",
      "Bash(MSYS_NO_PATHCONV=1 npx supabase db push)",
      "Bash(MSYS_NO_PATHCONV=1 npx supabase db push --include-all)",
      "Bash(export MSYS_NO_PATHCONV=1)",
      "Bash(timeout 60 npm run test:integration -- character-discovery)",
      "Bash(timeout 90 npm run test:integration -- --exclude storage-bucket)",
      "Bash(for file in rls-policies cascade-deletes storage-bucket)",
      "Bash(do echo \"=== $file.db.spec.ts ===\")",
      "Bash(grep:*)",
      "Bash(done)",
      "Bash(timeout 180 npm run test:integration)",
      "Bash(tee:*)",
      "Bash(timeout 90 npm run test:integration -- character-discovery)",
      "Bash(timeout 60 npm run test:integration -- rls-policies)",
      "Bash(timeout 120 npm run test:integration)",
      "Bash(docker ps:*)",
      "Bash(docker logs:*)",
      "Bash(timeout 60 npm run test:integration -- storage-bucket --reporter=verbose)",
      "Bash(timeout 30 npm run test:integration -- anchor-management)",
      "Bash(timeout 30 npm run test:integration -- storage-bucket)",
      "Bash(timeout 20 npm run test:integration -- storage-bucket --reporter=verbose)",
      "WebFetch(domain:supabase-sql.vercel.app)",
      "WebFetch(domain:github.com)",
      "Bash(supabase status:*)",
      "Bash(MSYS_NO_PATHCONV=1 supabase db reset)"
    ],
    "deny": [],
    "ask": []
  }
}